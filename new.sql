-- MySQL Script generated by MySQL Workbench
-- Wed May 16 16:32:02 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema inven
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `inven` ;

-- -----------------------------------------------------
-- Schema inven
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `inven` DEFAULT CHARACTER SET utf8 ;
USE `inven` ;

-- -----------------------------------------------------
-- Table `inven`.`kategori`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inven`.`kategori` ;

CREATE TABLE IF NOT EXISTS `inven`.`kategori` (
  `id_kategori` VARCHAR(8) NOT NULL,
  `nama_kategori` VARCHAR(25) NULL,
  PRIMARY KEY (`id_kategori`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inven`.`barang`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inven`.`barang` ;

CREATE TABLE IF NOT EXISTS `inven`.`barang` (
  `id_barang` VARCHAR(8) NOT NULL,
  `nama_barang` VARCHAR(25) NULL,
  `harga_barang` INT NULL,
  `stok_barang` INT NULL,
  `tmp_simpanbarang` VARCHAR(20) NULL,
  `gambar_barang` TEXT(50) NULL,
  `kategori_id_kategori` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`id_barang`),
  INDEX `fk_barang_kategori_idx` (`kategori_id_kategori` ASC),
  CONSTRAINT `fk_barang_kategori`
    FOREIGN KEY (`kategori_id_kategori`)
    REFERENCES `inven`.`kategori` (`id_kategori`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inven`.`level`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inven`.`level` ;

CREATE TABLE IF NOT EXISTS `inven`.`level` (
  `id_level` VARCHAR(8) NOT NULL,
  `nama_level` VARCHAR(25) NULL,
  PRIMARY KEY (`id_level`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inven`.`login`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inven`.`login` ;

CREATE TABLE IF NOT EXISTS `inven`.`login` (
  `username` VARCHAR(25) NOT NULL,
  `password` VARCHAR(12) NULL,
  `kode_pegawai` VARCHAR(8) NULL,
  `nama_pegawai` VARCHAR(25) NULL,
  `alamat_pegawai` TEXT(45) NULL,
  `notelp_pegawai` VARCHAR(13) NULL,
  `tgl_login` DATETIME NULL,
  `level_id_level` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`username`),
  INDEX `fk_login_level1_idx` (`level_id_level` ASC),
  CONSTRAINT `fk_login_level1`
    FOREIGN KEY (`level_id_level`)
    REFERENCES `inven`.`level` (`id_level`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inven`.`supplier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inven`.`supplier` ;

CREATE TABLE IF NOT EXISTS `inven`.`supplier` (
  `id_supplier` VARCHAR(8) NOT NULL,
  `nama_supplier` VARCHAR(25) NULL,
  `notelp_supplier` VARCHAR(13) NULL,
  `alamat_supplier` TEXT(45) NULL,
  PRIMARY KEY (`id_supplier`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inven`.`barang_masuk`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inven`.`barang_masuk` ;

CREATE TABLE IF NOT EXISTS `inven`.`barang_masuk` (
  `kode_masuk` VARCHAR(8) NOT NULL,
  `tgl_masuk` DATETIME NULL,
  `keterangan_masuk` TEXT(45) NULL,
  `supplier_id_supplier` VARCHAR(8) NOT NULL,
  `login_username` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`kode_masuk`),
  INDEX `fk_barang_masuk_supplier1_idx` (`supplier_id_supplier` ASC),
  INDEX `fk_barang_masuk_login1_idx` (`login_username` ASC),
  CONSTRAINT `fk_barang_masuk_supplier1`
    FOREIGN KEY (`supplier_id_supplier`)
    REFERENCES `inven`.`supplier` (`id_supplier`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_barang_masuk_login1`
    FOREIGN KEY (`login_username`)
    REFERENCES `inven`.`login` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inven`.`detail_masuk`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inven`.`detail_masuk` ;

CREATE TABLE IF NOT EXISTS `inven`.`detail_masuk` (
  `iddetail_masuk` VARCHAR(8) NOT NULL,
  `stok_masuk` INT NULL,
  `barang_id_barang` VARCHAR(8) NOT NULL,
  `barang_masuk_kode_masuk` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`iddetail_masuk`),
  INDEX `fk_detail_masuk_barang1_idx` (`barang_id_barang` ASC),
  INDEX `fk_detail_masuk_barang_masuk1_idx` (`barang_masuk_kode_masuk` ASC),
  CONSTRAINT `fk_detail_masuk_barang1`
    FOREIGN KEY (`barang_id_barang`)
    REFERENCES `inven`.`barang` (`id_barang`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detail_masuk_barang_masuk1`
    FOREIGN KEY (`barang_masuk_kode_masuk`)
    REFERENCES `inven`.`barang_masuk` (`kode_masuk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inven`.`barang_keluar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inven`.`barang_keluar` ;

CREATE TABLE IF NOT EXISTS `inven`.`barang_keluar` (
  `kode_keluar` VARCHAR(8) NOT NULL,
  `tgl_keluar` DATETIME NULL,
  `keterangan_keluar` TEXT(45) NULL,
  `login_username` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`kode_keluar`),
  INDEX `fk_barang_keluar_login1_idx` (`login_username` ASC),
  CONSTRAINT `fk_barang_keluar_login1`
    FOREIGN KEY (`login_username`)
    REFERENCES `inven`.`login` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inven`.`detail_keluar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inven`.`detail_keluar` ;

CREATE TABLE IF NOT EXISTS `inven`.`detail_keluar` (
  `iddetail_keluar` VARCHAR(8) NOT NULL,
  `stok_keluar` INT NULL,
  `barang_id_barang` VARCHAR(8) NOT NULL,
  `barang_keluar_kode_keluar` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`iddetail_keluar`),
  INDEX `fk_detail_keluar_barang1_idx` (`barang_id_barang` ASC),
  INDEX `fk_detail_keluar_barang_keluar1_idx` (`barang_keluar_kode_keluar` ASC),
  CONSTRAINT `fk_detail_keluar_barang1`
    FOREIGN KEY (`barang_id_barang`)
    REFERENCES `inven`.`barang` (`id_barang`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detail_keluar_barang_keluar1`
    FOREIGN KEY (`barang_keluar_kode_keluar`)
    REFERENCES `inven`.`barang_keluar` (`kode_keluar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inven`.`barang_retur`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inven`.`barang_retur` ;

CREATE TABLE IF NOT EXISTS `inven`.`barang_retur` (
  `kode_retur` VARCHAR(8) NOT NULL,
  `tgl_retur` DATETIME NULL,
  `keterangan_retur` TEXT(45) NULL,
  `supplier_id_supplier` VARCHAR(8) NOT NULL,
  `login_username` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`kode_retur`),
  INDEX `fk_barang_retur_supplier1_idx` (`supplier_id_supplier` ASC),
  INDEX `fk_barang_retur_login1_idx` (`login_username` ASC),
  CONSTRAINT `fk_barang_retur_supplier1`
    FOREIGN KEY (`supplier_id_supplier`)
    REFERENCES `inven`.`supplier` (`id_supplier`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_barang_retur_login1`
    FOREIGN KEY (`login_username`)
    REFERENCES `inven`.`login` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `inven`.`detail_retur`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `inven`.`detail_retur` ;

CREATE TABLE IF NOT EXISTS `inven`.`detail_retur` (
  `iddetail_retur` VARCHAR(8) NOT NULL,
  `stok_retur` INT NULL,
  `keterangan_barangretur` TEXT(45) NULL,
  `barang_id_barang` VARCHAR(8) NOT NULL,
  `barang_retur_kode_retur` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`iddetail_retur`),
  INDEX `fk_detail_retur_barang1_idx` (`barang_id_barang` ASC),
  INDEX `fk_detail_retur_barang_retur1_idx` (`barang_retur_kode_retur` ASC),
  CONSTRAINT `fk_detail_retur_barang1`
    FOREIGN KEY (`barang_id_barang`)
    REFERENCES `inven`.`barang` (`id_barang`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detail_retur_barang_retur1`
    FOREIGN KEY (`barang_retur_kode_retur`)
    REFERENCES `inven`.`barang_retur` (`kode_retur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `inven` ;

-- -----------------------------------------------------
-- Placeholder table for view `inven`.`namakategori`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inven`.`namakategori` (`id_barang` INT, `nama_barang` INT, `harga_barang` INT, `stok_barang` INT, `tmp_simpanbarang` INT, `gambar_barang` INT, `kategori_id_kategori` INT, `id_kategori` INT, `nama_kategori` INT);

-- -----------------------------------------------------
-- Placeholder table for view `inven`.`namalevel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `inven`.`namalevel` (`username` INT, `password` INT, `kode_pegawai` INT, `nama_pegawai` INT, `alamat_pegawai` INT, `notelp_pegawai` INT, `tgl_login` INT, `level_id_level` INT, `id_level` INT, `nama_level` INT);

-- -----------------------------------------------------
-- View `inven`.`namakategori`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `inven`.`namakategori` ;
DROP TABLE IF EXISTS `inven`.`namakategori`;
USE `inven`;
CREATE  OR REPLACE VIEW `namakategori` AS SELECT * FROM barang JOIN kategori WHERE kategori_id_kategori = id_kategori;

-- -----------------------------------------------------
-- View `inven`.`namalevel`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `inven`.`namalevel` ;
DROP TABLE IF EXISTS `inven`.`namalevel`;
USE `inven`;
CREATE  OR REPLACE VIEW `namalevel` AS SELECT * FROM login JOIN level WHERE level_id_level = id_level;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
